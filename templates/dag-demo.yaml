{{- $envAll := . }}
{{- $serviceAccountName := "keystone-fernet-setup" }}
{{ tuple $envAll "fernet_setup" $serviceAccountName | include "helm-toolkit.snippets.kubernetes_pod_rbac_serviceaccount" }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: workflow-edit
rules:
  - apiGroups:
      - argoproj.io
    resources:
      - workflows
      - workflows/finalizers
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: read-workflows
subjects:
- kind: ServiceAccount
  name: {{ $serviceAccountName }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: workflow-edit
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: {{ $serviceAccountName }}
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - create
      - update
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: {{ $serviceAccountName }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ $serviceAccountName }}
subjects:
  - kind: ServiceAccount
    name: {{ $serviceAccountName }}
    namespace: {{ $envAll.Release.Namespace }}
---
# Create the DAG
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: wf-keystone
spec:
  serviceAccountName: {{ $serviceAccountName }}
  entrypoint: diamond
  volumes:
  - name: etckeystone
    emptyDir: {}
  - name: fernet-keys
    emptyDir: {}
  - name: keystone-etc
    secret:
      secretName: keystone-etc
      defaultMode: 0444
  - name: keystone-bin
    configMap:
      name: keystone-bin
      defaultMode: 0555
  templates:
  - name: echo
    container:
      image: alpine:3.7
      command: [echo, "hello"]
  - name: diamond
    dag:
      tasks:
      - name: keystone-fernet-setup
        template: keystone-fernet-setup
      - name: B
        dependencies: [keystone-fernet-setup]
        template: echo
        arguments:
          parameters: [{name: message, value: B}]
      - name: C
        dependencies: [keystone-fernet-setup]
        template: echo
        arguments:
          parameters: [{name: message, value: C}]
      - name: D
        dependencies: [B, C]
        template: echo
        arguments:
          parameters: [{name: message, value: D}]

  - name: keystone-fernet-setup
    container:
      image: "docker.io/openstackhelm/keystone:ocata"
      imagePullPolicy: IfNotPresent
      env:
      - name: KEYSTONE_USER
        value: "keystone"
      - name: KEYSTONE_GROUP
        value: "keystone"
      - name: KUBERNETES_NAMESPACE
        value: "openstack"
      - name: KEYSTONE_KEYS_REPOSITORY
        value: "/etc/keystone/fernet-keys/"
      command:
        - python
        - /tmp/fernet-manage.py
        - fernet_setup
      volumeMounts:
      - name: etckeystone
        mountPath: /etc/keystone
      - name: fernet-keys
        mountPath: "/etc/keystone/fernet-keys/"
      - name: keystone-etc
        mountPath: /etc/keystone/keystone.conf
        subPath: keystone.conf
        readOnly: true
      - name: keystone-etc
        mountPath: /etc/keystone/logging.conf
        subPath: logging.conf
        readOnly: true
      - name: keystone-bin
        mountPath: /tmp/fernet-manage.py
        subPath: fernet-manage.py
        readOnly: true


---
# Create a pod which is dependent on the DAG
apiVersion: v1
kind: Pod
metadata:
  name: dependent-pod
spec:
  serviceAccountName: {{ $serviceAccountName }}
  containers:
  - name: alpine
    image: alpine:3.7
    command: []
  initContainers:
  - name: kubernetes-entrypoint-pod
    image: ianhowell/kubernetes-entrypoint
    imagePullPolicy: Always
    env:
    - name: PATH
      value: /app:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/
    - name: COMMAND
      value: "echo \"Finished :)\""
    - name: INITIAL_SLEEP_INTERVAL
      value: "1000.0"
    - name: BACKOFF_RATE
      value: "1.0"
    - name: MAX_SLEEP_INTERVAL
      value: "10000.0"
    - name: OUTPUT_JSON
      value: "false"
    - name: DEPENDENCY_CUSTOM_RESOURCE
      value: "[{\"apiVersion\":\"argoproj.io/v1alpha1\",\"kind\":\"Workflow\",\"namespace\":\"openstack\",\"name\":\"wf-keystone\",\"fields\":[{\"key\":\"status.phase\",\"value\":\"Succeeded\"}]}]"
    command:
      - "kubernetes-entrypoint"
